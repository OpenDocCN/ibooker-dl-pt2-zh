["```py\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.decomposition import PCA\nfrom sklearn.preprocessing import StandardScaler\n```", "```py\niris_df = pd.read_csv('IRIS.csv')\n```", "```py\niris_df.head()\n```", "```py\niris_df.describe()\n```", "```py\niris_df.shape\n```", "```py\nX_variables = iris_df.iloc[:,1:5]\nX_variables\ny_variable = iris_df.iloc[:,5]\n```", "```py\nsc = StandardScaler()\ntransformed_df = sc.fit_transform(X_variables)\n```", "```py\ncovariance_matrix = np.cov(transformed_df.T)\ncovariance_matrix\n```", "```py\neigen_values, eigen_vectors = np.linalg.eig(covariance_matrix)\neigen_pairs = [(np.abs(eigen_values[i]), eigen_vectors[:,i]) for i in range(len(eigen_values))]\nprint('Eigenvalues arranged in descending order:')\nfor i in eigen_pairs:\n    print(i[0])\n```", "```py\npca = PCA()\npca = pca.fit(transformed_df)\n```", "```py\nexplained_variance = pca.explained_variance_ratio_\nexplained_variance\n```", "```py\ndataframe = pd.DataFrame({'var':pca.explained_variance_ratio_,\n             'PC':['PC1','PC2','PC3','PC4']})\nsns.barplot(x='PC',y=\"var\", \n           data=dataframe, color=\"b\");\n```", "```py\nplt.plot(np.cumsum(pca.explained_variance_ratio_))\nplt.xlabel('number of components')\nplt.ylabel('cumulative explained variance')\nplt.show()\n```", "```py\npca_2 = PCA(n_components =2 )\npca_2 = pca_2.fit(transformed_df)\npca_2d = pca_2.transform(X_variables)\n```", "```py\niris_df['Species'] = iris_df['Species'].replace({'Iris-setosa':0, 'Iris-versicolor':1, 'Iris-virginica':2})\n```", "```py\nplt.figure(figsize=(8,6))\nplt.scatter(pca_2d[:,0], pca_2d[:,1],c=iris_df['Species'])\nplt.show()\n```", "```py\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler\n```", "```py\nmushrooms_df = pd.read_csv('mushrooms.csv')\nmushrooms_df.shape\nmushrooms_df.head()\n```", "```py\nencoder = LabelEncoder()\nfor col in mushrooms_df.columns:\n    mushrooms_df[col] = encoder.fit_transform(mushrooms_df[col])\n```", "```py\nmushrooms_df.head()\n```", "```py\nX_variables = mushrooms_df.iloc[:,1:23]\ny_label = mushrooms_df.iloc[:, 0]\nscaler = StandardScaler()\nX_features = scaler.fit_transform(X_variables)\n```", "```py\nu, s, v = np.linalg.svd(X_features, full_matrices=True)\n```", "```py\nvariance_explained = np.round(s**2/np.sum(s**2), decimals=3)\nvariance_explained\nsns.barplot(x=list(range(1,len(variance_explained)+1)),\n            y=variance_explained, color=\"blue\")\nplt.xlabel('SVs', fontsize=16)\nplt.ylabel('Percent of the variance explained', fontsize=15)\n```", "```py\ncol_labels= ['SV'+str(i) for i in range(1,3)]\nsvd_df = pd.DataFrame(u[:,0:2], index=mushrooms_df[\"class\"].tolist(), columns=col_labels)\nsvd_df=svd_df.reset_index()\nsvd_df.rename(columns={'index':'Class'}, inplace=True)\nsvd_df.head()\n```", "```py\nsvd_df['Class'] = svd_df['Class'].replace({1:'Edible', 0:'Poison'})\n```", "```py\ncolor_dict = dict({'Edible':'Black',\n                   'Poison': 'Red'})\nsns.scatterplot(x=\"SV1\", y=\"SV2\", hue=\"Class\", \n                palette=color_dict, \n                data=svd_df, s=105,\n                alpha=0.5)\nplt.xlabel('SV 1: {0}%'.format(variance_explained[0]*100), fontsize=15)\nplt.ylabel('SV 2: {0}%'.format(variance_explained[1]*100), fontsize=15)\n```"]