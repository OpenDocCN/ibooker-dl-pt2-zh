["```py\n$ docker ps --format=\"table {{.Names}}\\t{{.Image}}\"\n```", "```py\nNAMES                                 IMAGE\ntraining-service                      orca3/services:latest\nprediction-service                    orca3/services:latest\nintent-classification-torch-predictor pytorch/torchserve:0.5.2-cpu\nintent-classification-predictor       orca3/intent-classification-predictor\nmetadata-store                        orca3/services:latest\ndata-management                       orca3/services:latest\nminio                                 minio/minio\n```", "```py\n# DM returns dataset metadata for a newly created dataset\n{\n \"dataset_id\": \"1\",                                ❶\n  \"name\": \"tweet_emotion\",                          ❷\n  \"dataset_type\": \"TEXT_INTENT\",                    ❸\n  \"last_updated_at\": \"2022-03-25T01:32:37.493612Z\",\n  \"commits\": [                                      ❹\n    {                                               ❹\n      \"dataset_id\": \"1\",                            ❹\n      \"commit_id\": \"1\",                             ❹\n      \"created_at\": \"2022-03-25T01:32:38.919357Z\",  ❹\n      \"commit_message\": \"Initial commit\",           ❹\n      \"path\": \"dataset/1/commit/1\",                 ❹\n      \"statistics\": {                               ❹\n        \"numExamples\": \"2963\",                      ❹\n        \"numLabels\": \"3\"                            ❹\n      }                                             ❹\n    }                                               ❹\n  ]                                                 ❹\n}\n```", "```py\n# send gRPC request to kick off a model training in training service.\nfunction start_training() {\n grpcurl -plaintext \\\n   -d \"{\n   \\\"metadata\\\": {\n     \\\"algorithm\\\":\\\"intent-classification\\\",   ❶\n     \\\"dataset_id\\\":\\\"1\\\",                      ❷\n     \\\"name\\\":\\\"test1\\\",  \n     \\\"train_data_version_hash\\\":$2,            ❸\n     \\\"output_model_name\\\":\\\"twitter-model\\\",   ❹\n     \\\"parameters\\\": {                          ❹\n       \\\"LR\\\":\\\"4\\\",                            ❹\n       \\\"EPOCHS\\\":\\\"15\\\",                       ❹\n       \\\"BATCH_SIZE\\\":\\\"64\\\",                   ❹\n       \\\"FC_SIZE\\\":\\\"128\\\"                      ❹\n     }                                          ❹\n   }\n }\" \\\n   localhost:\"6003\" training.TrainingService/Train\n}\n```", "```py\n# query training job status from training service\ngrpcurl -plaintext \\\n -d \"{\\\"job_id\\\": \\\"1\\\"}\" \\                                        ❶\n localhost:\"6003\" training.TrainingService/GetTrainingStatus\n\n# query model training metrics from metadata store.\ngrpcurl -plaintext \\\n -d \"{\\\"run_id\\\": \\\"1\\\"}\" \\                                        ❶\n localhost:\"6002\" metadata_store.MetadataStoreService/GetRunStatus\n```", "```py\njob 1 is currently in \"launch\" status, check back in 5 seconds\njob 1 is currently in \"running\" status, check back in 5 seconds\njob 1 is currently in \"succeed\" status            ❶\n```", "```py\n{\n  \"run_info\": {\n    \"start_time\": \"2022-03-25T14:25:44.395619\",\n    \"end_time\": \"2022-03-25T14:25:48.261595\",\n    \"success\": true,                                 ❶\n    \"message\": \"test accuracy 0.520\",                ❷\n    \"run_id\": \"1\",                                   ❸\n    \"run_name\": \"training job 1\",\n    \"tracing\": {\n      \"dataset_id\": \"1\",                             ❹\n      \"version_hash\": \"hashAg==\",                    ❹\n      \"code_version\": \"231c0d2\"\n    },\n    \"epochs\": {                                      ❺\n      \"0-10\": {                                      ❺\n        \"start_time\": \"2022-03-25T14:25:46.880859\",  ❺\n        \"end_time\": \"2022-03-25T14:25:47.054872\",    ❺\n        \"run_id\": \"1\",                               ❺\n        \"epoch_id\": \"0-10\",                          ❺\n        \"metrics\": {                                 ❺\n          \"accuracy\": \"0.4925373134328358\"           ❺\n        }                                            ❺\n      },                                             ❺\n      .. .. ..\n   }\n}\n```", "```py\ngrpcurl -plaintext \\\n  -d \"{\n    \\\"runId\\\": \\\"1\\\",                                      ❶\n    \\\"document\\\": \\\"You can have a certain arrogance, \n      and I think that's fine, but what you should never\n      lose is the respect for the others.\\\"                ❷\n  }\" \\\n  localhost:6001 prediction.PredictionService/Predict\n```", "```py\n{\n  \"response\": \"{\\\"result\\\": \\\"joy\\\"}\"   ❶\n}\n```"]