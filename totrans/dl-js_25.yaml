- en: A.2\. Installing tfjs-node-gpu on Windows
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Make sure that your Windows meets the system requirements of CUDA Toolkit. Certain
    Windows releases and 32-bit machine architectures are not supported by CUDA Toolkit.
    See [https://docs.nvidia.com/cuda/cuda-installation-guide-microsoft-windows/index.html#system-requirements](https://docs.nvidia.com/cuda/cuda-installation-guide-microsoft-windows/index.html#system-requirements)
    for more details.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We assume you have installed Node.js and npm on your system and that the paths
    of Node.js and npm are available in your systemâ€™s environment variable `Path`.
    If not, see [https://nodejs.org/en/download/](https://nodejs.org/en/download/)
    for downloadable installers.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Install Microsoft Visual Studio, as it is required by the installation of CUDA
    Toolkit. See the same link as in step 1 for which version of Visual Studio to
    install.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Download and install CUDA Toolkit for Windows. At the time of this writing,
    CUDA 10.0 is required for running tfjs-node-gpu (latest version: 1.2.10). Be sure
    to select the correct installer for your Windows release. Installers for Windows
    7 and Windows 10 are available. The step requires administrator privileges.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Download CuDNN. Make sure that the version of CuDNN matches the version of CUDA.
    For example, CuDNN 7.6 matches CUDA Toolkit 10.0\. NVIDIA may require you to create
    a login for its website and answer some survey questions before you can download
    CuDNN.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Unlike the CUDA Toolkit installer, the CuDNN you just downloaded is a zip file.
    Extract it, and you will see three folders within: cuda/bin, cuda/include, and
    cuda/lib/x64\. Locate the directory in which your CUDA Toolkit is installed (by
    default, it is something like C:/Program Files/NVIDIA CUDA Toolkit 10.0/cuda).
    Copy the extracted files to the corresponding subfolders with the same name there.
    For example, the files in cuda/bin of the extracted zip archive should be copied
    to C:/Program Files/NVIDIA CUDA Toolkit 10.0/cuda/bin. This step may also require
    administrator privileges.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After installing CUDA Toolkit and CuDNN, restart your Windows system. We found
    this to be necessary for all the newly installed libraries to be properly loaded
    for tfjs-node-gpu use.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Install the npm package `window-build-tools`. This is necessary for the installation
    of the npm package `@tensorflow/tfjs-node-gpu` in the next step:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Install the packages `@tensorflow/tfjs` and `@tensorflow/tfjs-node-gpu` with
    npm:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: To verify that the installation succeeded, open the node command line and run
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: See that both commands finish without errors. After the second command, you
    should see some logging lines in the console printed by the TensorFlow GPU shared
    library. Those lines will list details of the CUDA-enabled GPUs that tfjs-node-gpu
    has recognized and will use in subsequent deep-learning programs.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
