["```js\n> const x = tf.tensor1d([-1, 3, 7]);\n> const y = tf.neg(x);\n> y.print();\nTensor\n    [1, -3, -7]\n```", "```js\n> const y = x.neg();\n```", "```js\n> const y = tf.relu(tf.reciprocal(tf.neg(x)));\n```", "```js\n> const y = x.neg().reciprocal().relu();\n```", "```js\n> const x = tf.tensor2d([[0, 10], [20, 30]]);\n> x.mean().print();\nTensor\n    15\n```", "```js\n> x.mean(-1).print();\nTensor\n    [5, 25]\n```", "```js\n> x.mean(1).print();\n```", "```js\n> const x = tf.tensor2d([[0, 2], [4, 6]]);\n> const y = tf.tensor2d([[10, 20], [30, 46]]);\n> tf.add(x, y).print();\nTensor\n    [[10, 22],\n     [34, 52]]\n```", "```js\n> const x = tf.zeros([2, 2]);\n> const y = tf.ones([2, 2]);\n> tf.concat([x, y]).print();\nTensor\n    [[0, 0],\n     [0, 0],\n     [1, 1],\n     [1, 1]]\n```", "```js\n> tf.concat([x, y], 1).print();\nTensor\n    [[0, 0, 1, 1],\n     [0, 0, 1, 1]]\n```", "```js\n> const x = tf.randomNormal([3, 2]);\n> x.print();\nTensor\n    [[1.2366893 , 0.6011682 ],\n     [-1.0172369, -0.5025602],\n     [-0.6265425, -0.0009868]]\n```", "```js\n> x.slice([1, 0], [1, 2]).print();\nTensor\n     [[-1.0172369, -0.5025602],]\n```", "```js\n> x.slice(1, 1).print();\nTensor\n     [[-1.0172369, -0.5025602],]\n```", "```js\n> x.slice(1, 2).print();\nTensor\n    [[-1.0172369, -0.5025602],\n     [-0.6265425, -0.0009868]]\n```", "```js\n> x.slice([0, 1], [-1, 1]).print();\nTensor\n    [[0.6011682 ],\n     [-0.5025602],\n     [-0.0009868]]\n```", "```js\n> const x = tf.tensor2d([[1, 2], [3, 4], [5, 6]]);\n> x.print();\nTensor\n    [[1, 2],\n     [3, 4],\n     [5, 6]]\n> const pieces = x.unstack();\n> console.log(pieces.length);\n  3\n> pieces[0].print();\nTensor\n    [1, 2]\n> pieces[1].print();\nTensor\n    [3, 4]\n> pieces[2].print();\nTensor\n    [5, 6]\n```", "```js\n> tf.stack(pieces).print();\nTensor\n    [[1, 2],\n     [3, 4],\n     [5, 6]]\n```"]