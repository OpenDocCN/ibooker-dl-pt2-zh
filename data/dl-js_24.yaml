- en: A.1\. Installing tfjs-node-gpu on Linux
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: A.1\. 在 Linux 上安装 tfjs-node-gpu
- en: We assume you have installed Node.js and npm on your system and that the paths
    to node and npm are included in your system path. If not, see [https://nodejs.org/en/download/](https://nodejs.org/en/download/)
    for downloadable installers.
  id: totrans-1
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们假设你已经在系统上安装了 Node.js 和 npm，并且 node 和 npm 的路径已包含在你的系统路径中。如果没有，请查看 [https://nodejs.org/en/download/](https://nodejs.org/en/download/)
    获取可下载的安装程序。
- en: Download the CUDA Toolkit from [https://developer.nvidia.com/cuda-downloads](https://developer.nvidia.com/cuda-downloads).
    Be sure to choose the suitable version for the version of tfjs-node-gpu you intend
    to use. At the time of this writing, the latest version of tfjs-node-gpu is 1.2.10,
    which works with CUDA Toolkit version 10.0\. In addition, be sure to select the
    correct operating system (Linux), architecture (for example, x86_64 for machines
    with mainstream Intel CPUs), Linux distribution, and version of the distribution.
    You will have the option to download several types of installers. Here, we assume
    you download the “runfile (local)” file (as opposed to, for example, the local
    .deb package) for use in the subsequent steps.
  id: totrans-2
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [https://developer.nvidia.com/cuda-downloads](https://developer.nvidia.com/cuda-downloads)
    下载 CUDA Toolkit。务必选择适合你打算使用的 tfjs-node-gpu 版本的适当版本。在撰写本文时，tfjs-node-gpu 的最新版本为
    1.2.10，与 CUDA Toolkit 版本 10.0 兼容。此外，请确保选择正确的操作系统（Linux）、架构（例如，用于主流 Intel CPU 的
    x86_64）、Linux 发行版和发行版的版本。你将有下载几种类型安装程序的选项。在这里，我们假设你下载了“runfile（local）”文件（而不是，例如，本地
    .deb 包）以供后续步骤使用。
- en: In your downloads folder, make the just-downloaded runfile executable. For example,
  id: totrans-3
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的下载文件夹中，使刚下载的 runfile 可执行。例如，
- en: '[PRE0]'
  id: totrans-4
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Use `sudo` to run the runfile. Note that the CUDA Toolkit installation process
    may need to install or upgrade the NVIDIA driver if the version of the NVIDIA
    driver already installed on your machine is too old or if no such driver has been
    installed. If this is the case, you need to stop the X server by dropping to the
    shell-only model. On Ubuntu and Debian distributions, you can enter the shell-only
    model with the shortcut key Ctrl-Alt-F1. Follow the prompts on the screen to install
    the CUDA Toolkit installation, followed by a reboot of the machine. If you are
    in shell-only mode, you can reboot back to the normal GUI mode.
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`sudo`来运行 runfile。注意，CUDA Toolkit 安装过程可能需要安装或升级 NVIDIA 驱动程序，如果您机器上已安装的 NVIDIA
    驱动程序版本过旧或尚未安装此类驱动程序。如果是这种情况，你需要停止 X 服务器，转到仅 shell 模式。在 Ubuntu 和 Debian 发行版中，你可以使用快捷键
    Ctrl-Alt-F1 进入仅 shell 模式。按照屏幕上的提示安装 CUDA Toolkit，然后重新启动机器。如果你在仅 shell 模式下，你可以重新启动回到正常的
    GUI 模式。
- en: 'If step 3 completed correctly, the `nvidia-smi` command should now be available
    on your path. You can use it to check the status of your GPUs. It provides information
    such as the name, temperature-sensor reading, fan speed, processor, and memory
    usage of the NVIDIA GPUs installed on your machine, in addition to the current
    NVIDIA driver version. It is a handy tool for real-time monitoring of your GPU
    when you are using tfjs-node-gpu to train deep neural networks. A typical printed
    message from `nvidia-smi` looks like the following (note this machine has two
    NVIDIA GPUs):'
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果步骤 3 完成正确，`nvidia-smi`命令现在应该可在你的路径中使用了。你可以使用它来检查 GPU 的状态。它提供了有关安装在你的机器上的 NVIDIA
    GPU 的名称、温度传感器读数、风扇速度、处理器和内存使用情况，以及当前 NVIDIA 驱动程序版本的信息。当你使用 tfjs-node-gpu 训练深度神经网络时，它是一个方便的实时监视
    GPU 的工具。`nvidia-smi` 的典型输出信息如下（请注意，此机器上有两个 NVIDIA GPU）：
- en: '[PRE1]'
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Add the path to the 64-bit CUDA library files to your `LD_LIBRARY_PATH` environment
    variable. Assuming that you are using the bash shell, you can add the following
    line to your .bashrc file:'
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 64 位 CUDA 库文件的路径添加到你的`LD_LIBRARY_PATH`环境变量中。假设你正在使用 bash shell，你可以将以下行添加到你的
    .bashrc 文件中：
- en: '[PRE2]'
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: tfjs-node-gpu uses the `LD_LIBRARY_PATH` environment variable to find the required
    dynamic library files when starting up.
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: tfjs-node-gpu 在启动时使用`LD_LIBRARY_PATH`环境变量来找到所需的动态库文件。
- en: Download CuDNN from [https://developer.nvidia.com/cudnn](https://developer.nvidia.com/cudnn).
    Why do you need CuDNN in addition to CUDA? This is because CUDA is a generic computation
    library with uses in fields other than deep learning (for example, fluid dynamics).
    CuDNN is NVIDIA’s library for accelerated deep neural network operations built
    on top of CUDA. NVIDIA may require you to create a login account and answer some
    survey questions in order to download CuDNN. Be sure to download the version of
    CuDNN that matches the version of CUDA Toolkit installed in the previous steps.
    For example, CuDNN 7.6 goes with CUDA Toolkit 10.0.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从[https://developer.nvidia.com/cudnn](https://developer.nvidia.com/cudnn)下载CuDNN。为什么除了CUDA还需要CuDNN呢？这是因为CUDA是一个通用的计算库，除了深度学习之外还可以应用在其他领域（例如流体力学）。CuDNN是NVIDIA基于CUDA构建的加速深度神经网络操作的库。NVIDIA可能要求你创建一个登录账号并回答一些调查问题才能下载CuDNN。一定要下载与之前步骤安装的CUDA
    Toolkit版本相匹配的CuDNN版本。例如，CuDNN 7.6与CUDA Toolkit 10.0一起使用。
- en: 'Unlike CUDA Toolkit, the downloaded CuDNN doesn’t come with an executable installer.
    Instead, it is a compressed tarball that contains a number of dynamic library
    files and C/C++ headers. These files should be extracted and copied into the appropriate
    destination folders. You can use a sequence of commands like the following to
    achieve this:'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与CUDA Toolkit不同，下载的CuDNN没有可执行安装程序。相反，它是一个压缩的tarball，其中包含了一些动态库文件和C/C++头文件。这些文件应该被提取并复制到适当的目标文件夹中。你可以使用如下的一系列命令来实现这一点：
- en: '[PRE3]'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Now that all the required drivers and libraries have been installed, you can
    quickly verify CUDA and CuDNN by importing tfjs-node-gpu in node:'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，所有必需的驱动程序和库都已安装完成，你可以通过在node中导入tfjs-node-gpu来快速验证CUDA和CuDNN：
- en: '[PRE4]'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Then, at the Node.js command-line interface,
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，在Node.js命令行界面上，
- en: '[PRE5]'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'If everything went well, you should see a number of logging lines confirming
    the discovery of a GPU (or multiple GPUs, depending on your system configuration)
    ready for use by tfjs-node-gpu:'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果一切顺利，你应该会看到一系列日志行，确认发现了一个（或多个，取决于你的系统配置）可以被tfjs-node-gpu使用的GPU：
- en: '[PRE6]'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Now you are all set to use the full features of tfjs-node-gpu. Just make sure
    you include the following dependencies in your package.json (or their later versions):'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你已经准备好使用tfjs-node-gpu的所有功能了。只需确保在你的package.json中包含以下依赖项（或其后续版本）：
- en: '[PRE7]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'In your main .js file, make sure you import the basic dependencies, including
    `@tensorflow/tfjs` and `@tensorflow/tfjs-node-gpu`. The former gives you the general
    API of TensorFlow.js, while the latter wires TensorFlow.js operations to the high-performance
    computation kernels implemented on CUDA and CuDNN:'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在你的主要的 .js 文件中，确保导入基本的依赖项，包括`@tensorflow/tfjs`和`@tensorflow/tfjs-node-gpu`。前者给你提供了TensorFlow.js的通用API，而后者将TensorFlow.js操作与基于CUDA和CuDNN实现的高性能计算内核相连：
- en: '[PRE8]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
