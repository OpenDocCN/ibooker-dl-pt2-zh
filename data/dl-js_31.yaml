- en: Exercises
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习
- en: Use `tf.tensorBuffer()` to create an “identity 4D tensor” satisfying the following
    properties. Its shape should be `[5, 5, 5, 5]`. It should have 0 values everywhere,
    except for the elements whose indices are four identical numbers (for example,
    `[2, 2, 2, 2]`), which should have the value 1.
  id: totrans-1
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`tf.tensorBuffer()`创建符合以下条件的“恒等 4D 张量”。它的形状应为`[5, 5, 5, 5]`，它应该在所有位置都有 0 值，除了元素索引为四个相同数字（例如，`[2,
    2, 2, 2]`）的元素应具有值 1。
- en: 'Create a 3D tensor of shape `[2, 4, 5]` using `tf.randomUniform()` and the
    default `[0, 1)` interval. Using `tf.sum()`, write a line of code to perform a
    reduce-sum over the second and third dimensions. Examine the output. It should
    have a shape of `[2]`. What do you expect the values of the elements to be, approximately?
    Does the output match your expectations? (Hint: what is the expected value of
    a number distributed randomly in the `[0, 1)` interval? What is the expected value
    of the sum of two such values, given statistical independence?)'
  id: totrans-2
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`tf.randomUniform()`和默认的`[0，1)`间隔创建一个形状为`[2，4，5]`的 3D 张量。使用`tf.sum()`，编写一行代码对第二和第三维进行减少求和。检查输出。它应该具有形状`[2]`。你预计元素的值是多少，大约是多少？输出是否符合你的期望？（提示：在`[0，1)`间隔中随机分布的数字的期望值是多少？考虑到统计独立性，这两个值的总和的期望值是多少？）
- en: Use `tf.randomUniform()` to create a 4 × 4 matrix (a 2D tensor of shape `[4,
    4]`). Get the 2 × 2 submatrix located at the center using `tf.slice()`.
  id: totrans-3
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`tf.randomUniform()`创建一个 4x4 矩阵（形状为`[4，4]`的 2D 张量）。使用`tf.slice()`获取位于中心的 2x2
    子矩阵。
- en: 'Use `tf.ones()`, `tf.mul()`, and `tf.concat()` to create such a 3D tensor:
    its shape should be `[5, 4, 3]`. The first slice along the first axis (the tensor
    of shape `[1, 4, 3]`) should have element values that are all 1; the second slice
    along the first axis should have element values that are all 2; and so forth.'
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`tf.ones()`，`tf.mul()`和`tf.concat()`创建这样一个 3D 张量：其形状应为`[5，4，3]`。沿第一轴的第一片（形状为`[1，4，3]`的张量）应具有所有元素值为
    1；第二片沿第一轴应具有所有元素值为 2; 依此类推。
- en: 'Extra points: The tensor has many elements, so it is hard to test its correctness
    just by looking at the text output of `print()`. How can you write a unit test
    to check its correctness? (Hint: use `data()`, `dataSync()`, or `arraySync()`).'
  id: totrans-5
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加分题：该张量具有许多元素，因此仅通过查看`print()`的文本输出很难测试其正确性。你如何编写单元测试来检查其正确性？（提示：使用`data()`、`dataSync()`或`arraySync()`）。
- en: Write a JavaScript function that performs the following operations on two input
    2D tensors (matrices) of identical shapes. First, sum the two matrices. Second,
    the resultant matrix is divided by 2, element by element. Third, the matrix is
    transposed. The result of the transpose operation is returned by the function.
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个 JavaScript 函数，它对两个相同形状的输入 2D 张量（矩阵）执行以下操作。首先，将这两个矩阵相加。其次，逐个元素地将结果矩阵除以 2。第三，矩阵被转置。返回转置操作的结果。
- en: What TensorFlow.js functions do you use to write this function?
  id: totrans-7
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你使用了哪些 TensorFlow.js 函数来编写这个函数？
- en: Can you implement the function twice, once using the functional API and once
    using the chaining API? Which implementation looks cleaner and more readable?
  id: totrans-8
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你能实现这个函数两次，一次使用功能 API，一次使用链接 API 吗？哪个实现看起来更清晰、更易读？
- en: Which steps involve broadcasting?
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪些步骤涉及广播？
- en: How do you ensure that this function doesn’t leak memory?
  id: totrans-10
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你如何确保这个函数不会泄漏内存？
- en: Can you write a unit test (using the Jasmine library at [https://jasmine.github.io/](https://jasmine.github.io/))
    to assert on the absence of memory leak?
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你能写一个单元测试（使用 Jasmine 库，位于 [https://jasmine.github.io/](https://jasmine.github.io/)）来确保不存在内存泄漏吗？
