- en: 3 AI, automation, and testing
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3 AI，自动化和测试
- en: This chapter covers
  id: totrans-1
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 本章包括
- en: Outlining the value of good testing
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 概述良好测试的价值
- en: Appreciating how tools help in testing
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 欣赏工具在测试中的帮助
- en: Identifying when AI tools could be of use in testing
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定何时可以使用AI工具进行测试
- en: 'Before we begin our journey into the use of LLMs in testing, we need to take
    a short detour and ask ourselves the following questions:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始探索在测试中使用LLMs之前，我们需要稍微跳出来回答以下问题：
- en: What is the purpose and value of testing?
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试的目的和价值是什么？
- en: How can tooling help us what that purpose?
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工具如何帮助我们实现这个目标？
- en: When is it appropriate to use AI tools?
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 何时适用于使用AI工具？
- en: It may feel like asking these fundamental questions is an unnecessary activity.
    But if you are someone who sees testing merely as a confirmatory exercise, as
    in executing test cases to confirm a requirement is correct, then your mileage
    from the subsequent chapters will be limited. Understanding the value and performance
    of testing is critical for determining how tools can be used in a useful way.
    So in this chapter, we’re going to explore why a deeper understanding of testing
    can help us to utilize tools effectively. That said, if you are someone who already
    has that deep understanding of testing, feel free to skim this chapter and move
    on. For the rest of us, let’s go back to square one by asking the question, why
    do we test?
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 对于有些人来说，提出这些基本问题可能感觉是一种不必要的活动。但是，如果你是那种仅将测试视为一种确认性的练习的人，比如执行测试用例以确认需求是否正确，那么你对后续章节的理解可能会有限。了解测试的价值和性能对于确定如何有效地使用工具至关重要。因此，在本章中，我们将探讨为什么对测试有更深入的理解可以帮助我们有效地利用工具。也就是说，如果你已经对测试有了深入的了解，可以跳过本章继续阅读。对于我们其他人来说，让我们回到最初的问题，为什么要测试？
- en: 3.1 The value of testing
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.1 测试的价值
- en: 'To help us appreciate having a strong foundation of why we need testing in
    software development, let’s return to the common perspective that testing is a
    confirmatory exercise. By this we mean that testing is viewed as something that
    is done to confirm these conditions:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助我们充分认识到为什么我们需要软件开发中的测试的重要基础，让我们回到常见的观点，即测试是一种确认性的练习。这意味着测试被视为一种用于确认以下条件的操作：
- en: Written requirements have been met.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 符合书面需求。
- en: All critical paths have been covered in a system.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有关键路径在系统中都已覆盖。
- en: The system has no bugs.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统没有漏洞。
- en: 'Teams that have this perspective tend to overly rely on the use of test cases/scripts
    that contain explicit instructions for a human, or machine, to follow and confirm
    whether an expected outcome has been met. The issue with this mindset and approach
    is less that it’s utilizing test scripts and more that it only uses test scripts
    and nothing else. Many biases come from an over-reliance on test scripts, but
    if we bring it back to the usage of LLMs in testing, then it limits our appreciation
    of how these tools can help us. When tools like ChatGPT grew in popularity, a
    large majority of demonstrations and debates around the use of LLMs in testing
    were focused on one thing: Test scripts. People would demonstrate how LLMs could
    generate test scripts that could manually be executed by either a human or a test
    automation tool.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 持有这种观点的团队往往过度依赖包含明确指令的测试用例/脚本，这些指令是为了让人或机器按照要求执行并确认预期结果是否已经满足。这种心态和方法的问题并不在于使用测试脚本，而是仅仅使用测试脚本而没有其他。过度依赖测试脚本会带来许多偏见，但是如果我们将其回归到测试中使用LLMs的情况，那么它会限制我们对这些工具如何帮助我们的认识。当像ChatGPT这样的工具日渐流行时，围绕在测试中使用LLMs的演示和讨论主要集中在一个方面：测试脚本。人们会演示LLMs如何生成测试脚本，这些脚本可以由人或测试自动化工具手动执行。
- en: Though initially these might have some use, the options for what else could
    be done with LLMs to help testing began to dry out. On the surface, this appears
    to be a limitation of the tooling in question, but instead, the real issue is
    that limited idea of what testing is and how it can help. So, if we are to expand
    our use of LLMs in testing, we have to first expand our understanding of what
    testing is and how it works.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然最初这些可能有些用途，但是关于如何利用LLMs在测试中做其他事情的选择开始减少。乍一看，这似乎是工具的局限性，但实际上，真正的问题是对测试的限定概念以及其如何帮助。所以，如果我们要扩大在测试中使用LLMs的范围，我们首先必须扩展对测试的理解和工作原理。
- en: 3.1.1 A different way of thinking about testing
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.1.1 关于测试的不同思考方式
- en: To help us establish a deeper understanding, let’s explore a model of testing
    that I use to define what I believe testing is for and how it helps, which is
    shown in Figure 3.1.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助我们建立更深入的理解，让我们探讨我用来定义我认为测试是为了什么以及它如何帮助的测试模型，如图3.1所示。
- en: Figure 3.1 A model of testing to help describe the value and purpose of testing
  id: totrans-19
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图3.1 测试模型，用于描述测试的价值和目的
- en: '![](images/03__image001.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](images/03__image001.png)'
- en: 'The model, based upon one created by James Lyndsay in his paper ''Exploration
    and Strategy'', [https://www.workroom-productions.com/why-exploration-has-a-place-in-any-strategy](www.workroom-productions.com.html),
    is made up of two circles. The left circle represents imagination, or what it
    is that we *want* in a product, and the right circle represents implementation,
    or what it is that we *have* in a product. The purpose of testing is to learn
    as much about what''s going on in each of these circles by carrying out testing
    activities. The more we test in these two circles, the more we learn. We can then:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模型是基于詹姆斯·林赛在他的论文“探索与战略”中创建的一个模型[https://www.workroom-productions.com/why-exploration-has-a-place-in-any-strategy](www.workroom-productions.com.html)，由两个圆组成。左圈代表想象力，或者我们在产品中*想要*的东西，右圈代表实现，或者我们在产品中*拥有*的东西。测试的目的是通过执行测试活动尽可能多地了解这两个圈中发生的事情。我们在这两个圈中进行的测试越多，我们学到的东西就越多。然后我们可以：
- en: Discover potential issues that might impact the quality.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 发现可能影响质量的潜在问题。
- en: Overlap these two circles of information, ensuring we have the understanding
    and confidence that we are building the product or service we want to build.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重叠这两个信息圈，确保我们理解并有信心我们正在构建我们想要构建的产品或服务。
- en: To help describe this further, let's look at an example in which a team is delivering
    a hypothetical search feature that we want to ensure is delivered to a high degree
    of quality.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更详细地描述这一点，让我们看一个例子，团队正在交付一个我们希望确保质量达到高水平的假想搜索功能。
- en: Imagination
  id: totrans-25
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 想象力
- en: 'The Imagination circle represents what it is that we want from our product,
    and that includes expectations that are both explicit and implicit. So in this
    circle, our testing is focused on learning as much about those explicit and implicit
    expectations. By doing this, we not only learn what has been explicitly stated
    in writing or verbally shared but also dig down into the details and remove ambiguity
    over terms and ideas. Let''s say a representative of the business or a user, such
    as a product owner, has shared this requirement with their team:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 想象力圈代表我们从产品中想要的东西，其中包括明确和隐含的期望。因此，在这个圈子里，我们的测试集中在尽可能多地了解这些明确和隐含的期望上。通过这样做，我们不仅了解了书面或口头共享的明确要求，而且深入挖掘细节，并消除了术语和想法的模糊性。假设业务代表或用户，如产品负责人，已将此要求与他们的团队共享：
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The explicit information shared here tells us that the product owner wants
    search results, ordered by relevance. However, a lot of implied information can
    be uncovered by testing the ideas and concepts behind what is being asked. This
    might come in the form of a series of questions we could ask, such as:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这里共享的明确信息告诉我们，产品所有者希望按相关性排序的搜索结果。然而，可以通过测试所要求的想法和概念来发现许多隐含信息。这可能以我们可以提出的一系列问题的形式出现，例如：
- en: What is meant by relevant results?
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “相关结果”是什么意思？
- en: Relevant to whom?
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与谁相关？
- en: What information is shared?
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 共享哪些信息？
- en: How do we order by relevancy?
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们如何按相关性排序？
- en: What data should we use?
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们应该使用什么数据？
- en: By asking these questions, we form a fuller picture of what is wanted, remove
    any misunderstandings in our team's thinking and identify potential risks that
    could impact those expectations. If we know more about what we are being asked
    to build, then we're more likely to build the right thing the first time.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 通过提出这些问题，我们形成了更全面的图片，消除了团队思维中的任何误解，并识别了可能影响这些期望的潜在风险。如果我们更多地了解我们被要求构建的内容，那么我们第一次就更有可能构建正确的东西。
- en: Implementation
  id: totrans-35
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 实现
- en: 'By testing the imagination, we get a stronger sense of what it is we are being
    asked to build. But, just because we might know what to build doesn''t mean we
    end up with a product that matches those expectations. This is why we also test
    the Implementation to learn:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 通过测试想象力，我们更清楚地了解被要求构建的东西。但是，仅仅因为我们可能知道要构建什么并不意味着我们最终会得到符合这些期望的产品。这就是为什么我们还要测试实现来了解：
- en: Whether the product matches our expectations
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 产品是否符合我们的期望
- en: How the product might not match our expectations
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 产品可能不符合我们的期望的方式
- en: 'Both goals are of equal importance. We want to ensure that we have built the
    right thing, but there will always be side effects, such as unintended behavior,
    vulnerabilities, missed expectations and downright weirdness that might appear
    in our products. With our search results example, we could not only test that
    the feature delivers results in the relevant order but also ask the product these
    questions:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个目标的重要性相等。我们希望确保我们构建的是正确的东西，但总会有一些副作用，比如意外行为、漏洞、未达预期的情况以及产品中可能出现的奇怪现象。以我们的搜索结果示例为例，我们不仅可以测试该功能按相关顺序提供结果，还可以问产品以下问题：
- en: What if I use different search terms?
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果我使用不同的搜索词会怎样？
- en: What if the relevant results don't match the behavior of other search tools?
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果相关结果与其他搜索工具的行为不匹配怎么办？
- en: What if part of the service is down when I search?
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果我搜索时部分服务停止了怎么办？
- en: What if I request results 1000 times in less than 5 seconds?
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果我在5秒内请求1000次结果怎么办？
- en: What happens if there are no results?
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果没有结果会怎样？
- en: By exploring beyond our expectations, we become more aware of what is going
    on in our product—warts and all. This ensures we don't end up making incorrect
    assumptions about how our product behaves and releasing a poor-quality product.
    It also means if we find unexpected behavior, we have the choice to attempt to
    remove or readjust our expectations.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 通过超越我们的期望进行探索，我们更加了解我们产品内发生的情况，不管是好事还是坏事。这确保我们不会对我们产品的行为产生错误的假设，并发布一个质量差的产品。这也意味着如果我们发现了意外行为，我们可以选择尝试去除或调整我们的期望。
- en: 3.1.2 A holistic approach to testing
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.1.2 测试的整体方法
- en: What the model of testing the imagination and implementation demonstrates is
    that the testing goes beyond a simple confirmation of expectations and lays out
    a more holistic approach to testing. By implementing different activities that
    focus on the imagination and implementation spaces, we learn more through the
    testing we execute about what we want to build and what we have built. The more
    we learn in these two areas, the more they align with one another. And the more
    they align, the more accurate our perception of quality becomes.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 想象和实现测试模型表明，测试超越了简单确认期望的程度，提出了一个更全面的测试方法。通过实施专注于想象和实现空间的不同活动，我们通过执行测试学到了更多关于我们想要构建和已经构建的内容。我们在这两个领域学到的越多，它们之间的一致性就越高。而一致性越高，我们对质量的感知就越准确。
- en: A team that is well-informed about their work has a better idea of the quality
    of their product. We are then also better equipped to decide what steps to take
    to improve quality. This enables us to decide to focus our attention on specific
    risks, make changes in our product to align with users’ expectations or determine
    what issues we want to invest time in to fix and which to leave alone. This is
    the value of good testing—to help teams get into a position where they can make
    these informed decisions and feel confident in the steps they are taking to develop
    a high-quality product.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 一个对自己的工作有充分了解的团队更清楚他们产品的质量。我们也就更有能力决定采取什么步骤来改进质量。这使我们能够决定将注意力集中在特定的风险上，对产品进行更改以与用户的期望相一致，或者确定我们想要花时间来修复哪些问题以及哪些问题我们打算放弃。这就是好的测试的价值，帮助团队做出这些明智的决策，并对他们所采取的开发高质量产品的步骤感到自信。
- en: To help us better appreciate this model, let’s consider a sample context in
    which testing is required. For our example, we are responsible for the delivery
    of a fast food ordering system. Users log on, find the restaurant they want to
    order from, place their order (which is sent to the restaurant) and then track
    the delivery of their order from within the product. A product like this one would
    need to be easy to use, highly available and secure. So to deliver a high-quality
    product, we might need to utilize different testing activities to focus on different
    types of risks, as shown in Figure 3.2.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解这个模型，让我们考虑一个需要测试的示例背景。以我们的示例为例，我们负责交付一个快餐订购系统。用户登录，找到他们想要订餐的餐馆，下订单（订单将发送给餐馆），然后在产品内跟踪订单的送货情况。像这样的产品需要易于使用、高度可用和安全。因此，为了交付高质量的产品，我们可能需要利用不同的测试活动来关注不同类型的风险，如图3.2所示。
- en: Figure 3.2 The imagination/implementation model with sample activities shown
    within it
  id: totrans-50
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图3.2 想象和实现模型，并显示其中的示例活动
- en: '![](images/03__image003.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](images/03__image003.png)'
- en: Within the model, we can see a range of various activities that are placed in
    specific areas because they are focused on specific types of risks. For example,
    on the imagination side, we might be concerned with risks that impact the usability
    of a site. So we employ testing activities that focus on user experience testing
    and collaborative design. On the implementation side, we want to ensure the product
    is stable and minimize risks that might impact the availability and usage of the
    product. So we employ activities such as exploratory testing and performance testing.
    Finally, notice how in the area that overlaps, we have added in test scripts.
    These are useful to us because they mitigate risks around unexpected changes appearing
    in the product as it grows and morphs over time, demonstrating that test scripting
    and automated checks are of use, but are only one part of the holistic whole.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个模型中，我们可以看到一系列不同的活动，它们被放置在特定的区域，因为它们专注于特定类型的风险。例如，在想象力方面，我们可能会关注影响网站可用性的风险。因此，我们采用侧重于用户体验测试和协作设计的测试活动。在实现方面，我们希望确保产品稳定，并尽量减少可能影响产品可用性和使用性的风险。因此，我们采用探索性测试和性能测试等活动。最后，请注意，在重叠的区域中，我们添加了测试脚本。这对我们很有用，因为它们减轻了产品在其随着时间的推移而变化和变形时出现意外变化的风险，这表明测试脚本和自动化检查是有用的，但只是整体的一部分。
- en: Each of these activities has different implementations, different challenges
    and different ways in which tooling can help. But we wouldn’t be able to easily
    identify these usages if we didn’t have that understanding of testing being an
    exercise in information gathering and knowledge sharing. With this model in place,
    and with an appreciation of the many different risks our work faces and the testing
    activities that help mitigate them, we can begin to start drilling deeper into
    how tooling plays a part in testing.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 每一个活动都有不同的实现方式、不同的挑战以及工具能够帮助的不同方式。但是如果我们没有对测试是信息收集和知识分享的一种练习有所了解，我们就无法轻松地识别这些用法。有了这个模型，以及对我们的工作面临的许多不同风险以及帮助我们减轻这些风险的测试活动的认识，我们可以开始更深入地了解工具在测试中的作用。
- en: 3.2 How tools help with testing
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.2 工具如何帮助测试
- en: You’ll likely hear a tester say (or you may even have said it yourself) that
    there is never enough time to test everything. It will likely be repeated in this
    book a few times. Teams are always limited by time, budgets, meetings, staffing
    and other factors, so in order to implement and execute effective, modern testing,
    we have to rely on tools to help us. Tools are essential to testing, but they
    bring us to our next misconception around testing—that a tool, or machine, can
    test like a human can.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会听到一个测试人员说（或者甚至你自己曾经说过），没有足够的时间来测试所有的东西。这本书中可能会重复几次。团队总是受到时间、预算、会议、人员配置和其他因素的限制，因此，为了实施和执行有效的现代化测试，我们必须依靠工具来帮助我们。工具对于测试至关重要，但它们也带来了我们下一个关于测试的误解——即工具或机器能够像人一样测试。
- en: 3.2.1 Automation bias
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.2.1 自动化偏见
- en: 'To appreciate how machines and humans differ in regard to testing, let’s consider
    an example where both are used to test a feature on a website. The feature is
    a full-width banner for an e-commerce website with an image and some text to highlight
    the deal of the day. Initially, we test it manually, or in a human-led way, and
    we observe the feature is working correctly: the image is shown and all the text
    associated with it is correct. Then we decide to use tools to automate this testing.
    We create code that will open the browser and assert that element A, which is
    where the deal of the day is loaded, exists. We run the automated test, and it
    passes. And then one day, after another successful release in which all our automated
    tests pass, an end-user raises a bug and informs us they can’t see the deal of
    the day. All they see is an empty white box at the top of the page.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 为了了解机器和人类在测试方面的不同之处，让我们考虑一个例子，其中两者都用于测试网站上的一个功能。该功能是电子商务网站的全宽横幅，带有一个图片和一些突出当日优惠的文字。最初，我们以手动方式或人为导向的方式测试它，并观察到该功能正常工作：图片显示出来，与之相关的所有文本都是正确的。然后，我们决定使用工具来自动化这个测试。我们编写代码，将打开浏览器并断言元素A存在，元素A是加载当日优惠的位置。我们运行自动化测试，它通过了。然后有一天，在另一个成功的发布之后，我们所有的自动化测试都通过了，一个最终用户提出了一个bug，并告诉我们他们看不到当日优惠。他们只看到页面顶部的一个空白白色框。
- en: 'What happened? During the process of creating the automated test, we have transferred
    our knowledge, which is built up from implicit information based on mental heuristics
    and oracles, and made it explicit. We have stripped a complex understanding of
    a feature down to a single instruction: element A should exist on a web page.
    So when the latest release of our product went out with a fault function to retrieve
    the deal of the day, or the CSS was incorrect or broken, the automated test still
    passes, because element A still exists. However, it takes a human a matter of
    seconds to see something is wrong.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 发生了什么事？在创建自动化测试的过程中，我们已经转移了我们的知识，这些知识是根据心理启发和预言建立起来的隐含信息。我们已经将我们对特性的复杂理解简化为一个指令：网页上应该存在元素A。所以当我们的产品的最新版本出现了无法检索每日特惠的故障功能，或者CSS不正确或损坏时，自动化测试仍然通过，因为元素A仍然存在。然而，人类只需要几秒钟就可以看出问题出在哪。
- en: The moral of this story isn’t that tools are bad or unnecessary, but that they
    are often misused or misinterpreted. This behavior is a type of *automation bias*
    that creeps into our perspective on the value of tooling, where the issue is that
    we ascribe more value to the output of a tool than what it is relaying to us.
    That is, when we designed our automated test to look for element A, we assumed
    that all we as humans were doing was looking for element A. But we were considering
    many other factors, even if we weren’t doing it consciously.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这个故事的寓意并不是工具是坏的或不必要的，而是它们经常被误用或被解释不正确。这种行为是*自动化偏见*，潜入了我们对工具价值的看法，即我们为工具的输出赋予的价值往往超过了它向我们传达的内容。也就是说，当我们设计我们的自动化测试来寻找元素A时，我们假设我们人类所做的只是寻找元素A。但即使我们没有有意识地这么做，我们还考虑了许多其他因素。
- en: If we fall prey to automation bias, we run the risk of selecting and implementing
    tools that we believe can reveal and report information in the same way as a human
    can—when in fact they don’t, leading to misguided overconfidence in the products
    we’re delivering, or generating a level of workload to have tools emulate human
    behavior that is unsustainable for a modern project. Tools cannot replace testing
    activities, and subscribing to that notion will ultimately lead to issues with
    quality and an increase in risks to a project. So instead, we have to shift our
    thinking more towards how tools can help support our testing.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们陷入自动化偏见，我们就会冒险选择和实施我们认为可以像人类一样揭示和报告信息的工具——而实际上它们不会，这会导致我们对所提供的产品产生错误的过分自信，或者产生一种使工具模仿人类行为的工作量水平，这对于一个现代项目是不可持续的。工具不能取代测试活动，而认同这种观点最终会导致质量问题，并增加项目的风险。因此，我们必须更多地转向如何利用工具来支持我们的测试。
- en: 3.2.2 Being selective with tooling
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.2.2 选择使用工具
- en: Success with tools comes from situations in which some thought has been put
    into the problem we want to solve and what tools could potentially help. To help
    us better understand this, let’s return to our deal of the day feature and look
    closer at what a human is doing when they test a feature like this.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**成功的工具使用**源自于我们在解决问题时对问题进行了一些思考，以及潜在可以帮助的工具。为了更好地理解这一点，让我们回到我们的每日特惠功能，并更仔细地看一看当人们测试这样的功能时在做什么。'
- en: First, we consider different ways of testing the feature. We use our current
    understanding around said feature to formulate test ideas and select what we want
    to test first. Next, we need to set up our test. This might include setting up
    an environment or creating/updating the necessary test data. (We might need to
    create a deal of the day to observe as well as test users to administer and view
    the deal.) With everything set up, we then need to execute our test, loading the
    browser or perhaps multiple browsers to verify that the deal renders correctly.
    Then once we’ve observed the results, we take notes or report our findings to
    our team, all of which would update our understanding of the feature, ready for
    us to start the process again. This flow can be summarized in a visualization
    like the one shown in Figure 3.3.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们考虑不同的测试功能的方法。我们利用我们对所述功能的当前理解来形成测试想法，并选择首先要测试的内容。接下来，我们需要设置我们的测试。这可能包括设置环境或创建/更新必要的测试数据。（我们可能需要创建一个每日特惠以供观察，以及测试用户以进行和查看交易。)
    当一切都准备好了，我们就需要执行我们的测试，加载浏览器，或者可能是多个浏览器，以验证交易正确地呈现出来。然后，一旦我们观察到结果，我们就会做笔记或向团队报告我们的发现，所有这些都会更新我们对特性的理解，准备好让我们再次开始这个过程。这个流程可以用类似于图3.3所示的可视化来总结。
- en: Figure 3.3 A visualization of the process of testing the deal of the day feature
  id: totrans-64
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图 3.3 测试每日特惠功能过程的可视化
- en: '![](images/03__image005.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](images/03__image005.png)'
- en: This cycle may be something that happens rapidly—for example, in an exploratory
    testing session. Or it may take place in a longer form, such as performance testing,
    in which each step has many details to consider. Regardless of the type of activity,
    to carry out the loop successfully, we need tools to complete the process. We
    likely would need to use tools such as database clients, test data managers or
    infrastructure tools to set up state management. We would use note-taking tools,
    screenshot applications and project management tools to report what has been learned.
    We can summarize these uses of tools in testing by updating our initial visualization,
    as shown in Figure 3.4.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这个循环可能会迅速发生——例如，在一次探索性测试会话中。或者可能是以较长的形式进行，比如性能测试，其中每一步都有许多细节需要考虑。无论是哪种类型的活动，要成功地执行这个循环，我们都需要工具来完成这个过程。我们可能需要使用诸如数据库客户端、测试数据管理器或基础设施工具来设置状态管理。我们会使用笔记工具、截图应用程序和项目管理工具来报告所学内容。我们可以通过更新我们的初始可视化来总结这些测试工具的用途，如图
    3.4 所示。
- en: Figure 3.4 A visualization of the process of testing, this time with the addition
    of tools
  id: totrans-67
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图 3.4 测试过程的可视化，这次添加了工具
- en: '![](images/03__image007.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](images/03__image007.png)'
- en: The visualization demonstrates how modern testing utilizes a range of tools
    for various tasks that occur in testing—rather than attempt to wrap the whole
    testing performance into the use of one tool. This is because, as the visualization
    demonstrates, there are many different activities at play when testing is carried
    out, and typically a successful tool is one that does one job well, as opposed
    to a tool that does many things poorly.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这个可视化演示了现代测试如何利用各种工具来执行测试中发生的各种任务——而不是试图将整个测试性能都包装到一个工具的使用中。这是因为，正如可视化所展示的那样，当进行测试时，有许多不同的活动在进行，通常成功的工具是那些能够很好地完成一项工作的工具，而不是那些能够很差地完成许多事情的工具。
- en: What is so interesting about this thinking is that when we take the time to
    consider it, it seems obvious to us. We all use tools to help us with distinct
    tasks that make up a larger activity. However, most of us do it without conscious
    or deliberate thought. Although we know that the use of tools in specific tasks
    is sensible, we need to develop the skills to start choosing and using tools with
    intention. This means familiarizing ourselves with tools and being more in tune
    with what we’re doing daily in our testing so that we can pick the right tool
    or, in the case of LLMs, the right prompt or enhancement. This is what the rest
    of this book will be focusing on, giving us the skills needed to know when LLMs
    can help with specific tasks.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这种思考之所以如此有趣，是因为当我们花时间考虑它时，它对我们来说似乎是显而易见的。我们都使用工具来帮助我们完成构成较大活动的不同任务。然而，大多数人在没有意识到或故意思考的情况下就这样做了。虽然我们知道在特定任务中使用工具是明智的，但我们需要培养选择并有意识地使用工具的技能。这意味着熟悉工具，并更加关注我们在测试中每天所做的事情，以便我们可以选择正确的工具，或者在
    LLMs 的情况下，选择正确的提示或增强功能。本书的其余部分将专注于这一点，为我们提供需要的技能，以便知道 LLMs 何时可以帮助完成特定任务。
- en: 3.3 Knowing when to use LLMs in testing
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.3 知道何时在测试中使用 LLMs
- en: We’ve now developed an understanding of how effective tool use in testing is
    about looking to enhance tasks within testing rather than replicate broad testing
    activities. But where do LLMs fit into this? Given their broad applications, let’s
    look at some of the common ways in which LLMs are currently being used and see
    how each can be used to support testing.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了测试中有效利用工具是关于寻求增强测试中的任务而不是复制广泛的测试活动。但是 LLMs 如何适应这一点呢？考虑到它们的广泛应用，让我们看看目前
    LLMs 被普遍使用的一些方式，以及如何每种方式都可以用于支持测试。
- en: 3.3.1 Generative capabilities
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.3.1 生成能力
- en: The label of generative AI has been applied to LLMs because they offer the ability
    to generate novel natural language outputs. By this we mean if we asked an LLM
    to generate a poem about the wonders of software testing, it would, although it
    may run the risk of repeating material it had been trained on—and would probably
    be a terrible poem. But putting quality to one side for a moment, the ability
    to have LLMs generate new outputs based on its model and the prompts it has been
    given is what has captured a lot of attention.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 生成AI的标签被应用到LLMs上，因为它们提供了生成新的自然语言输出的能力。这意味着如果我们要求LLM生成一首关于软件测试奇迹的诗，它会生成，尽管可能会重复它训练过的材料——而且可能是一首糟糕的诗。但是暂且不谈质量，LLMs基于其模型和所给的提示生成新输出的能力是吸引了很多关注的。
- en: 'However, we must remind ourselves that how an LLM generates outputs is based
    on a complex model of probabilities. This means it will generate material in a
    way that differs from how we as humans might generate ideas. A good example of
    this is the use of LLMs to generate test cases. If you recall in Chapter 1 we
    explored the concept that when sending a prompt like the one below to an LLM:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我们必须提醒自己，LLM生成输出的方式是基于复杂的概率模型。这意味着它将以与我们人类生成思想不同的方式生成材料。一个很好的例子是使用LLMs生成测试用例。如果你回忆一下第1章，我们探讨了向LLM发送以下提示时的概念：
- en: '[PRE1]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'It might respond with something similar to this (shortened for brevity):'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 它可能会以类似于以下的方式做出响应（为了简洁起见进行了缩短）：
- en: '[PRE2]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: How an LLM has generated these test cases is impressive, but they lack context
    and specificity to the feature or product we are testing. So instead, when working
    with LLMs, we need to make sure that how we prompt them or extend them gives them
    enough context to generate outputs that are valuable when used.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: LLM生成这些测试用例的方式令人印象深刻，但它们缺乏与我们正在测试的特性或产品相关的上下文和特定性。因此，当与LLMs一起工作时，我们需要确保我们如何提示它们或扩展它们提供足够的上下文，以便生成有价值的输出。
- en: The consequence of ensuring that we provide sufficient context is that it’s
    easier to use LLMs to generate outputs for very specific and targeted tasks. The
    alternative means we would have to provide a massive amount of input data that
    would result in a prompt that is expensive to build and maintain. For example,
    imagine the amount of context you would have to put into an LLM to get a test
    strategy that was relevant to our working context.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 确保我们提供足够的上下文的结果是，使用LLMs更容易生成非常具体和有针对性的任务输出。另一种方法是我们必须提供大量的输入数据，这将导致一个昂贵且难以维护的提示。例如，想象一下你需要为LLM提供多少上下文才能得到一个与我们的工作背景相关的测试策略。
- en: 'Instead, we can get more value from LLMs if we focus on using them to help
    with tasks such as these:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，如果我们专注于使用LLMs来帮助执行这些任务，我们就可以从它们那里获得更多的价值：
- en: '**Test data generation** - LLMs when given explicit rules around data sets
    can be used to generate rapid sets of data for use in a range of testing activities
    from exploratory to performance testing.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**测试数据生成** - 当给定数据集的明确规则时，LLMs可以用于生成一系列用于各种测试活动的数据，从探索性测试到性能测试。'
- en: '**Suggestions for risks and test ideas** - We should always avoid letting the
    output of an LLM be the sole arbiter of what to test and what not to test. We
    can use them to suggest test ideas and risks that can be used as jumping-off points
    for new ideas or factored into our existing work.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**风险和测试点的建议** - 我们应该始终避免让LLMs的输出成为测试与否的唯一裁决者。我们可以用它们来提出测试点和风险，作为新想法的出发点或纳入我们现有的工作。'
- en: '**Code snippets** - Similar to the test case example earlier, we gain little
    value from LLMs if we ask them to generate complete automated tests or frameworks.
    However, using them to generate smaller parts of automation or scripts that are
    used to support testing activities like exploratory testing can be advantageous.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码片段** - 类似于之前的测试用例示例，如果我们让它们生成完整的自动化测试或框架，我们将从LLMs中获得很少的价值。然而，使用它们来生成自动化的较小部分或用于支持测试活动的脚本，如探索性测试，可能是有利的。'
- en: 3.3.2 Transformation capabilities
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.3.2 变换能力
- en: 'Another benefit that LLMs offer is the ability to transform natural language
    from one structure to another. A common example of LLM transformation is language
    translation. Suppose that we sent something like this to an LLM:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 'LLMs提供的另一个好处是能够将自然语言从一种结构转换为另一种结构。LLM转换的常见示例是语言翻译。假设我们向LLM发送了类似于以下的内容： '
- en: '[PRE3]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Then it will return a response such as:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 然后它会返回类似于以下的响应：
- en: '[PRE4]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This is a useful way to illustrate how LLMs transform data, but we shouldn’t
    be restricted to just spoken language. LLMs are capable of transforming all types
    of data from one abstraction to another. Here are some examples that can help
    with testing:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个说明LLM如何转换数据的有用方式，但我们不应仅限于口语。LLM能够将所有类型的数据从一种抽象转换为另一种。以下是一些可帮助测试的示例：
- en: '**Transforming test data** - Using LLMs to rapidly transform data from one
    structure to another can help speed up testing. For example, we might ask an LLM
    to convert plain-text test data into SQL statements, or to convert SQL statements
    into helper functions that are called in test automation.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**转换测试数据** - 使用LLM迅速将数据从一种结构转换为另一种结构可以加快测试速度。例如，我们可以要求LLM将纯文本测试数据转换为SQL语句，或者将SQL语句转换为在测试自动化中调用的帮助函数。'
- en: '**Converting code** - LLMs can convert functions, classes and other data into
    new iterations of code. What makes this valuable is that LLMs can transform code
    into different languages but still keep the logic and flow of the original code
    in the newly translated output (although we should always test it to be sure).'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**转换代码** - LLM可以将函数、类和其他数据转换为新的代码。重要的是，LLM可以将代码转换为不同的语言，但仍然保持原始代码的逻辑和流程在新的翻译输出中（尽管我们应该始终测试以确保正确）。'
- en: '**Summarizing notes** - Though not as direct a conversion of data as, say,
    converting a code snippet from one language to another, we can use LLMs to transform
    and summarize at the same time. We can use LLMs to take raw testing notes from
    testing activities such as exploratory testing or shift-left testing sessions,
    and have them converted into summary notes to be shared with others.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**总结笔记** - 虽然不像将代码片段从一种语言转换为另一种语言那样直接转换数据，但我们可以使用LLM同时进行转换和总结。我们可以使用LLM将来自测试活动（如探索性测试或左移测试会议）的原始测试笔记转换为摘要笔记与他人共享。'
- en: 3.3.3 Enhancing capabilities
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.3.3 增强能力
- en: 'Finally, we can use LLMs to enhance and expand existing material. This usually
    means providing an LLM with a snippet of data and prompting the LLM to expand
    upon it. This has some overlap with the generative capabilities because we’re
    asking LLMs to generate a certain degree of new output, but in this situation,
    we’re providing a lot more upfront context and instructing it to focus on existing
    material, as opposed to prompting an LLM to generate something completely new.
    This means we can use this ability to help us with testing tasks such as these:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以使用LLM来增强和扩展现有材料。这通常意味着向LLM提供一小段数据片段，并提示LLM扩展该段落。这与生成能力有一些重叠，因为我们要求LLM生成一定程度的新输出，但在这种情况下，我们提供了更多的上下文信息，并指导其关注现有材料，而不是提示LLM生成完全不同的内容。这意味着我们可以利用这种能力来帮助我们完成以下测试任务：
- en: '**Reviewing code** - Not all who work in testing are confident coders, and
    even those of us who are comfortable with reading code can struggle at times to
    make sense of the code we are required to analyze or test. LLMs can enhance our
    understanding by taking code snippets and providing a natural language breakdown
    of how said code works, which can help with risk analysis, test design and more.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码审查** - 并非所有从事测试工作的人都是自信的编码人员，即使是那些习惯阅读代码的人有时也会在分析或测试所需的代码时感到困惑。LLM可以通过获取代码片段并提供自然语言的代码分解来增进我们的理解，这对于风险分析、测试设计等方面都有帮助。'
- en: '**Descriptive code** - Similar to reviewing code, we can use LLMs to help improve
    the descriptiveness of code—for example, rapidly creating code comments that can
    be easily created and maintained. This can be especially useful for automated
    testing where communicating what our automation code is doing is important for
    maintenance.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**描述性代码** - 类似于审查代码，我们可以使用LLM来帮助提高代码的描述性 - 例如，快速创建易于创建和维护的代码注释。对于自动化测试特别有用，在自动化代码要进行维护的情况下，交流我们的自动化代码正在做什么很重要。'
- en: '**Expanding analysis** - We can also use LLMs to expand our analysis activities
    such as risk analysis and shift left testing (where we ask questions about requirements
    before the feature is built). By providing it with our current analysis data,
    we can ask LLMs to review and expand upon it, suggesting new ideas that we can
    either incorporate into our analysis or ignore.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**扩展分析** - 我们还可以使用LLM来扩展我们的分析活动，如风险分析和左移测试（在构建功能之前，我们提前提出需求问题）。通过提供当前的分析数据，我们可以要求LLM进行审查和扩展，提出新的想法，我们可以将其纳入我们的分析中或忽略。'
- en: 3.3.4 LLMs in use in testing
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.3.4 在测试中使用LLM
- en: To put these different abilities of an LLM into context, let’s return to our
    visualization of testing with the support of tools, as shown in Figure 3.5.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将LLMs的这些不同能力置于上下文中，让我们回到我们在图 3.5 中展示的带有工具支持的测试的可视化中。
- en: Figure 3.5 A visualization of the process of testing, this time with the addition
    of LLMs
  id: totrans-101
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图 3.5 测试过程的可视化，这次增加了LLMs的内容。
- en: '![](images/03__image009.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](images/03__image009.png)'
- en: Looking through this updated visualization, we can see how LLMs can be inserted
    into distinct and specific tasks within the wider testing lifecycle. It brings
    us back to our area of effect model that we covered in Chapter 1\. Instead of
    attempting to use LLMs to replicate the full gamut of testing activities that
    exist within a lifecycle, we prioritize the best of our abilities as humans and
    the value we bring to testing. Then we choose to add LLMs in select areas to expand
    our work so that we can move faster, learn more and help ensure our teams are
    better informed so that they can build higher-quality products.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 通过查看此更新后的可视化，我们可以看到LLMs如何被插入到更广泛的测试生命周期中的不同和特定任务中。这让我们回到了我们在第一章中涵盖的影响范围模型。与其尝试使用LLMs来复制生命周期中存在的所有测试活动，我们更优先考虑人类的最佳能力和我们为测试带来的价值。然后我们选择在选择性的领域中添加LLMs以扩展我们的工作，以便我们能够更快地移动，学到更多，并确保我们的团队得到更好的信息，以便他们能够构建更高质量的产品。
- en: 3.4 Summary
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.4 总结
- en: If we have a limited understand of what testing is, then the use of tools will
    also be limited.
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果我们对测试的理解有限，那么使用工具的范围也将受限。
- en: Testing is not a confirmatory exercise, but rather a collection of different
    activities that help those seeking to learn about the imagination and implementation
    of a product.
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试不是一项确认性的练习，而是一系列不同的活动，帮助那些想要了解产品想象力和实施的人。
- en: The imagination relates to our understanding of what we want to build.
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 想象力与我们对所要构建的东西的理解有关。
- en: The implementation relates to our understanding of what we have built.
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实施与我们对所构建的东西的理解有关。
- en: As our understanding of both aspects increases, they align, helping us to deliver
    a higher quality product.
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随着我们对两个方面的理解增加，它们会相互一致，帮助我们交付更高质量的产品。
- en: We run many different types of testing activities to focus on different types
    of risk and how they impact both imagination and implementation.
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们运行许多不同类型的测试活动，以便专注于不同类型的风险以及它们对想象力和实施的影响。
- en: Tools are an essential component of successful testing.
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工具是成功测试的重要组成部分。
- en: LLMs can be used to generate, transform and enhance outputs.
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LLMs可以用于生成、转换和增强输出。
- en: Use LLMs with smaller, specific tasks to generate outputs that provide value.
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用LLMs进行较小，具体的任务，以生成提供价值的输出。
- en: LLMs can generate content for us that can help with specific tasks or create
    suggested content.
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LLMs可以为我们生成内容，这些内容可以帮助完成特定任务或创建建议的内容。
- en: LLMs can transform data to convert raw data into useful formats or summarize
    it.
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LLMs可以将数据转换为有用的格式或对其进行总结。
- en: LLMs can also enhance existing material, adding new suggestions or expanding
    details.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LLMs还可以增强现有材料，添加新的建议或扩展细节。
- en: We can insert LLMs into many distinct and specific testing tasks, which reflects
    the area of effect model we learned about in chapter 1.
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以将LLMs插入到许多不同且具体的测试任务中，这反映了我们在第一章学到的影响范围模型。
